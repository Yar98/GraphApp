<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Image" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAEAQAAABZTeXN0ZW0uSU8uTWVtb3J5U3RyZWFtCgAAAAdfYnVmZmVyB19v
        cmlnaW4JX3Bvc2l0aW9uB19sZW5ndGgJX2NhcGFjaXR5C19leHBhbmRhYmxlCV93cml0YWJsZQpfZXhw
        b3NhYmxlB19pc09wZW4dTWFyc2hhbEJ5UmVmT2JqZWN0K19faWRlbnRpdHkHAAAAAAAAAAACAggICAgB
        AQEBCQIAAAAAAAAAaggAAGoIAABqCAAAAQEBAQoPAgAAAGoIAAAC/9j/4AAQSkZJRgABAQEAYABgAAD/
        2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5
        PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjL/wAARCABGAEYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAEC
        AwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS
        0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqD
        hIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo
        6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcF
        BAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2
        Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaan
        qKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEA
        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
</value>
  </data>
</root>